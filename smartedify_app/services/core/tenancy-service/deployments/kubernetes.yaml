apiVersion: v1
kind: ConfigMap
metadata:
  name: tenancy-service-config
  namespace: smartedify
  labels:
    app: tenancy-service
    component: config
data:
  NODE_ENV: "production"
  PORT: "3003"
  LOG_LEVEL: "info"
  CORS_ORIGIN: "https://app.smartedify.com,https://admin.smartedify.com"
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  ENABLE_AUDIT_LOG: "true"
  OTEL_SERVICE_NAME: "tenancy-service"
  OTEL_SERVICE_VERSION: "1.0.0"
  KAFKA_CLIENT_ID: "tenancy-service"
  KAFKA_GROUP_ID: "tenancy-service-group"

---
apiVersion: v1
kind: Secret
metadata:
  name: tenancy-service-secrets
  namespace: smartedify
  labels:
    app: tenancy-service
    component: secrets
type: Opaque
stringData:
  DB_HOST: "postgres-primary.database.svc.cluster.local"
  DB_PORT: "5432"
  DB_USERNAME: "tenancy_service"
  DB_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  DB_NAME: "smartedify_tenancy"
  JWT_SECRET: "CHANGE_ME_IN_PRODUCTION"
  ENCRYPTION_KEY: "CHANGE_ME_32_CHAR_ENCRYPTION_KEY"
  KAFKA_BROKERS: "kafka-headless.kafka.svc.cluster.local:9092"
  OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger-collector.observability.svc.cluster.local:14268"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenancy-service
  namespace: smartedify
  labels:
    app: tenancy-service
    component: api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: tenancy-service
      component: api
  template:
    metadata:
      labels:
        app: tenancy-service
        component: api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: tenancy-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: tenancy-service
        image: smartedify/tenancy-service:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3003
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: tenancy-service-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: tenancy-service-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: tenancy-service-config
              key: LOG_LEVEL
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: tenancy-service-secrets
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: tenancy-service-secrets
              key: DB_PORT
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: tenancy-service-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tenancy-service-secrets
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: tenancy-service-secrets
              key: DB_NAME
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: tenancy-service-secrets
              key: JWT_SECRET
        - name: KAFKA_BROKERS
          valueFrom:
            secretKeyRef:
              name: tenancy-service-secrets
              key: KAFKA_BROKERS
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/tenancy/health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/tenancy/health/readiness
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tenancy-service
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: tenancy-service
  namespace: smartedify
  labels:
    app: tenancy-service
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 3003
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: tenancy-service
    component: api

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tenancy-service
  namespace: smartedify
  labels:
    app: tenancy-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tenancy-service-hpa
  namespace: smartedify
  labels:
    app: tenancy-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tenancy-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: tenancy-service-pdb
  namespace: smartedify
  labels:
    app: tenancy-service
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: tenancy-service
      component: api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tenancy-service-netpol
  namespace: smartedify
  labels:
    app: tenancy-service
spec:
  podSelector:
    matchLabels:
      app: tenancy-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: smartedify
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 3003
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: kafka
    ports:
    - protocol: TCP
      port: 9092
  - to:
    - namespaceSelector:
        matchLabels:
          name: observability
    ports:
    - protocol: TCP
      port: 14268
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53