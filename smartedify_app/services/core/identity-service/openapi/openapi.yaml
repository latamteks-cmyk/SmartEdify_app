openapi: 3.0.3
info:
  title: Identity Service
  version: 1.0.0
  description: API for managing identity, authentication, and authorization.

paths:
  /oauth/par:
    post:
      summary: Pushed Authorization Request (PAR)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code_challenge:
                  type: string
                code_challenge_method:
                  type: string
      responses:
        '201':
          description: Successfully created PAR request
  /oauth/device_authorization:
    post:
      summary: Device Authorization
      responses:
        '200':
          description: Successfully initiated device authorization
  /oauth/authorize:
    get:
      summary: OIDC Authorize
      parameters:
        - name: redirect_uri
          in: query
          schema:
            type: string
        - name: scope
          in: query
          schema:
            type: string
        - name: request_uri
          in: query
          schema:
            type: string
        - name: code_challenge
          in: query
          schema:
            type: string
        - name: code_challenge_method
          in: query
          schema:
            type: string
      responses:
        '302':
          description: Redirect to login
  /oauth/token:
    post:
      summary: OIDC Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                code:
                  type: string
                code_verifier:
                  type: string
                refresh_token:
                  type: string
                device_code:
                  type: string
      responses:
        '200':
          description: Access and refresh tokens
  /oauth/revoke:
    post:
      summary: Token Revocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                token_type_hint:
                  type: string
      responses:
        '200':
          description: Token successfully revoked
  /oauth/introspect:
    post:
      summary: Token Introspection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Token introspection result
  /users:
    post:
      summary: Create User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: User created
  /.well-known/openid-configuration:
    get:
      summary: OIDC Discovery
      parameters:
        - name: tenant_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OIDC configuration
  /.well-known/jwks.json:
    get:
      summary: JWKS Endpoint
      parameters:
        - name: tenant_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: JSON Web Key Set
  /webauthn/registration/options:
    get:
      summary: WebAuthn Registration Options
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Registration options
  /webauthn/registration/verification:
    post:
      summary: WebAuthn Registration Verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Registration verification result
  /webauthn/authentication/options:
    get:
      summary: WebAuthn Authentication Options
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Authentication options
  /webauthn/authentication/verification:
    post:
      summary: WebAuthn Authentication Verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Authentication verification result

components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string