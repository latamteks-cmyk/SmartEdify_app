version: '3.8'
services:
  gateway:
    build: .
    image: smartedify/gateway:dev
    ports:
      - "8080:8080"
    environment:
      - JWKS_TTL_SECONDS=300
      - JWKS_NEG_CACHE_SECONDS=60
      - DPOP_IAT_SKEW_SECONDS=10
      - DPOP_REPLAY_TTL_SECONDS=300
      - WS_MSGS_PER_SEC=1
      - CORS_CONFIG=/etc/gateway/cors-tenants.yaml
      - RATE_LIMIT_CONFIG=/etc/gateway/ratelimit.yaml
      - WAF_MAX_BODY_BYTES=5242880
      - MTLS_SPIFFE_TRUST_DOMAIN=smartedify.global
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./config/cors-tenants.yaml:/etc/gateway/cors-tenants.yaml:ro
      - ./config/ratelimit.yaml:/etc/gateway/ratelimit.yaml:ro
      - ./plugins/dpop_validator.wasm:/plugins/dpop_validator.wasm:ro
    depends_on:
      - rate-limit
      - spire-server
      - prometheus
      - s3
  rate-limit:
    image: envoyproxy/ratelimit:latest
    ports:
<<<<<<< HEAD
      - "8081:8081"
    environment:
      - USE_STATSD=true
      - STATSD_HOST=prometheus
      - STATSD_PORT=9125
      - REDIS_SOCKET_TYPE=tcp
      - REDIS_URL=redis:6379
    depends_on:
      - redis
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
  
  spire-server:
    image: spiffe/spire-server:1.7.1
    ports:
      - "8082:8081"
    volumes:
      - ./config/spire-server.conf:/opt/spire/conf/server/server.conf:ro
      - spire_data:/opt/spire/data
    command: ["/opt/spire/bin/spire-server", "run"]
  
  spire-agent:
    image: spiffe/spire-agent:1.7.1
    depends_on:
      - spire-server
    volumes:
      - ./config/spire-agent.conf:/opt/spire/conf/agent/agent.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: ["/opt/spire/bin/spire-agent", "run"]
  
=======
      - "6379:6379"
  spire-server:
    image: spiffe/spire-server:1.7.1
    ports:
      - "8081:8081"
>>>>>>> origin/main
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
<<<<<<< HEAD
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/gateway_rules.yml:/etc/prometheus/gateway_rules.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics
    volumes:
      - ./config/otel-collector.yaml:/etc/otelcol-contrib/otel-collector.yaml:ro
    command: ["--config=/etc/otelcol-contrib/otel-collector.yaml"]
    depends_on:
      - prometheus
  
=======
>>>>>>> origin/main
  s3:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123
<<<<<<< HEAD
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - s3_data:/data

volumes:
  redis_data:
  spire_data:
  prometheus_data:
  s3_data:
=======
    command: server /data
    ports:
      - "9000:9000"
>>>>>>> origin/main
