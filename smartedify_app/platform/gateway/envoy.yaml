# Envoy Proxy configuration for SmartEdify Gateway
static_resources:
  listeners:
    - name: listener_http
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: gateway
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/api/v1/identity/" }
                          route: { cluster: identity-service }
                        - match: { prefix: "/api/v1/governance/" }
                          route: { cluster: governance-service }
                        - match: { prefix: "/api/v1/streaming/" }
                          route: { cluster: streaming-service }
                        - match: { prefix: "/api/v1/documents/" }
                          route: { cluster: documents-service }
                        - match: { prefix: "/api/v1/notifications/" }
                          route: { cluster: notifications-service }
                        - match: { prefix: "/api/v1/finance/" }
                          route: { cluster: finance-service }
                        - match: { prefix: "/api/v1/tenancy/" }
                          route: { cluster: tenancy-service }
                        - match: { prefix: "/api/v1/user-profiles/" }
                          route: { cluster: user-profiles-service }
                        - match: { prefix: "/healthz" }
                          route: { cluster: gateway-admin }
                        - match: { prefix: "/readyz" }
                          route: { cluster: gateway-admin }
                        - match: { prefix: "/metrics" }
                          route: { cluster: gateway-admin }
                        - match: { prefix: "/.well-known/egress-policy" }
                          route: { cluster: gateway-admin }
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        smartedify:
                          issuer: "https://auth.smartedify.global/t/{tenant_id}"
                          remote_jwks:
                            http_uri:
                              uri: "https://auth.smartedify.global/.well-known/jwks.json?tenant_id={tenant_id}"
                              cluster: jwks_cluster
                              timeout: 3s
                            cache_duration: 300s
                          forward: true
                      rules: [{ match: { prefix: "/" }, requires: { provider_name: "smartedify" } }]
                  - name: envoy.filters.http.wasm
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        name: dpop_validator
                        vm_config: { runtime: "envoy.wasm.runtime.v8", code: { local: { filename: "/plugins/dpop_validator.wasm" } } }
                        configuration:
                          "@type": type.googleapis.com/google.protobuf.StringValue
                          value: '{"replay_cache":{"type":"redis","dsn":"redis://rate-limit:6379","ttl_seconds":300},"iat_skew_seconds":10,"require_on_upgrade":true,"ws_close_code_on_fail":4401}'
                  - name: envoy.filters.http.ratelimit
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                      domain: "smartedify"
                      failure_mode_deny: true
                      rate_limit_service: { grpc_service: { envoy_grpc: { cluster_name: ratelimit_cluster } } }
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_response(h)
                          h:headers():add("Strict-Transport-Security","max-age=63072000; includeSubDomains; preload")
                          h:headers():add("X-Content-Type-Options","nosniff")
                          h:headers():add("Referrer-Policy","no-referrer")
                          h:headers():add("Permissions-Policy","camera=(), microphone=()")
                        end
                  - name: envoy.filters.http.router
  clusters:
    - name: identity-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: identity-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: identity-service, port_value: 3001 }
    - name: governance-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: governance-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: governance-service, port_value: 3011 }
    - name: streaming-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: streaming-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: streaming-service, port_value: 3014 }
    - name: documents-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: documents-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: documents-service, port_value: 3006 }
    - name: notifications-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: notifications-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: notifications-service, port_value: 3005 }
    - name: finance-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: finance-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: finance-service, port_value: 3007 }
    - name: tenancy-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: tenancy-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: tenancy-service, port_value: 3003 }
    - name: user-profiles-service
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: user-profiles-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: user-profiles-service, port_value: 3002 }
    - name: gateway-admin
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: gateway-admin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: gateway-admin, port_value: 8081 }
    - name: jwks_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: jwks_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: identity-service, port_value: 3001 }
    - name: ratelimit_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: ratelimit_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: rate-limit, port_value: 6379 }
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }
