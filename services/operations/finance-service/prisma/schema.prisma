// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id          String   @id @default(uuid())
  tenantId    String   @map("tenant_id")
  
  // Order details
  type        OrderType
  status      OrderStatus @default(PENDING)
  amount      Decimal     @db.Decimal(10, 2)
  currency    String      @default("PEN")
  description String?
  
  // Reference to external entity (reservation, fee, etc.)
  referenceId   String  @map("reference_id")
  referenceType String  @map("reference_type")
  
  // Customer information
  customerId    String? @map("customer_id")
  customerEmail String? @map("customer_email")
  customerName  String? @map("customer_name")
  
  // Billing address
  billingAddress Json?   @map("billing_address")
  
  // Metadata
  metadata Json?
  
  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  expiresAt DateTime? @map("expires_at")
  
  // Relations
  payments Payment[]
  
  @@map("orders")
  @@index([tenantId])
  @@index([referenceId, referenceType])
  @@index([customerId])
  @@index([status])
}

model Payment {
  id        String   @id @default(uuid())
  orderId   String   @map("order_id")
  
  // Payment details
  status    PaymentStatus @default(PENDING)
  amount    Decimal       @db.Decimal(10, 2)
  currency  String        @default("PEN")
  
  // Payment provider
  provider           PaymentProvider
  providerPaymentId  String?         @map("provider_payment_id")
  providerCustomerId String?         @map("provider_customer_id")
  
  // Payment method
  paymentMethod     String? @map("payment_method") // card, bank_transfer, etc.
  paymentMethodId   String? @map("payment_method_id")
  
  // Transaction details
  transactionId     String? @map("transaction_id")
  authorizationCode String? @map("authorization_code")
  
  // Fees
  platformFee       Decimal? @db.Decimal(10, 2) @map("platform_fee")
  processingFee     Decimal? @db.Decimal(10, 2) @map("processing_fee")
  
  // Failure information
  failureCode    String? @map("failure_code")
  failureMessage String? @map("failure_message")
  
  // Metadata
  metadata Json?
  
  // Timestamps
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  processedAt DateTime? @map("processed_at")
  
  // Relations
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  
  @@map("payments")
  @@index([orderId])
  @@index([status])
  @@index([provider])
  @@index([providerPaymentId])
}

model PaymentMethod {
  id         String   @id @default(uuid())
  customerId String   @map("customer_id")
  tenantId   String   @map("tenant_id")
  
  // Payment method details
  type       PaymentMethodType
  provider   PaymentProvider
  providerId String            @map("provider_id")
  
  // Card details (if applicable)
  cardLast4    String? @map("card_last4")
  cardBrand    String? @map("card_brand")
  cardExpMonth Int?    @map("card_exp_month")
  cardExpYear  Int?    @map("card_exp_year")
  
  // Bank details (if applicable)
  bankName String? @map("bank_name")
  
  // Status
  isDefault Boolean @default(false) @map("is_default")
  isActive  Boolean @default(true) @map("is_active")
  
  // Metadata
  metadata Json?
  
  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@map("payment_methods")
  @@index([customerId])
  @@index([tenantId])
  @@index([provider])
}

model WebhookEvent {
  id        String   @id @default(uuid())
  
  // Webhook details
  provider  PaymentProvider
  eventType String   @map("event_type")
  eventId   String?  @map("event_id")
  
  // Processing status
  status      WebhookStatus @default(PENDING)
  attempts    Int           @default(0)
  maxAttempts Int           @default(3) @map("max_attempts")
  
  // Payload
  payload Json
  
  // Processing details
  processedAt DateTime? @map("processed_at")
  errorMessage String?  @map("error_message")
  
  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@map("webhook_events")
  @@index([provider])
  @@index([status])
  @@index([eventType])
  @@unique([provider, eventId])
}

// Enums
enum OrderType {
  RESERVATION_FEE
  MAINTENANCE_FEE
  PENALTY_FEE
  DEPOSIT
  REFUND
  OTHER
}

enum OrderStatus {
  PENDING
  CONFIRMED
  CANCELLED
  EXPIRED
  REFUNDED
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
  REFUNDED
  PARTIALLY_REFUNDED
}

enum PaymentProvider {
  STRIPE
  CULQI
  MERCADOPAGO
  BANK_TRANSFER
  CASH
}

enum PaymentMethodType {
  CARD
  BANK_TRANSFER
  DIGITAL_WALLET
  CASH
}

enum WebhookStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  IGNORED
}